{"ast":null,"code":"var _jsxFileName = \"/Users/data/Library/Mobile Documents/com~apple~CloudDocs/Project Universe/NFT/Nextjs_data_json-1/pages/nft/[metadata].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport NextLink from \"next/link\";\nimport { Link, Flex, Box, Text, SimpleGrid, Heading } from \"@chakra-ui/core\";\nimport fetch from \"node-fetch\";\nimport ErrorPage from \"next/error\"; // define the type of the props with nested json\n\nconst NFTPage = props => {\n  if (!props.data) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    marginY: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"User\"), __jsx(SimpleGrid, {\n    columns: 2,\n    width: \"2xs\",\n    spacingY: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Text, {\n    fontWeight: \"bold\",\n    marginRight: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"UserID\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, props.data.id), __jsx(Text, {\n    fontWeight: \"bold\",\n    marginRight: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Name\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, props.data.name), __jsx(Text, {\n    fontWeight: \"bold\",\n    marginRight: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Email\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, props.data.email)), __jsx(NextLink, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    marginY: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    fontStyle: \"italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Go back home\")))));\n};\n\nexport const getServerSideProps = async ({\n  params,\n  res\n}) => {\n  try {\n    const {\n      id\n    } = params;\n    const result = await fetch(`http://localhost:3000/api/nft/${id}`);\n    const data = await result.json();\n    return {\n      props: {\n        data\n      }\n    };\n  } catch {\n    res.statusCode = 404;\n    return {\n      props: {}\n    };\n  }\n};\nexport default NFTPage;","map":{"version":3,"sources":["/Users/data/Library/Mobile Documents/com~apple~CloudDocs/Project Universe/NFT/Nextjs_data_json-1/pages/nft/[metadata].tsx"],"names":["NextLink","Link","Flex","Box","Text","SimpleGrid","Heading","fetch","ErrorPage","NFTPage","props","data","id","name","email","getServerSideProps","params","res","result","json","statusCode"],"mappings":"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","sourcesContent":["import NextLink from \"next/link\";\nimport { Link, Flex, Box, Text, SimpleGrid, Heading } from \"@chakra-ui/core\";\nimport { GetServerSideProps, NextPage } from \"next\";\nimport fetch from \"node-fetch\";\nimport ErrorPage from \"next/error\";\n\n// define the type of the props with nested json\n\n\n\ntype Data = {\n  metadata: {\n    name: string;\n    image: string;\n    description: string;\n  };\n  cached_file_url: string;\n};\n\nconst NFTPage: NextPage<{ data: Data }> = props => {\n  if (!props.data) {\n    return <ErrorPage statusCode={404} />;\n  }\n\n  return (\n    <Box>\n      <Flex flexDirection=\"column\" alignItems=\"center\">\n        <Heading marginY=\"2rem\">User</Heading>\n        <SimpleGrid columns={2} width=\"2xs\" spacingY={4}>\n          <Text fontWeight=\"bold\" marginRight={4}>\n            UserID\n          </Text>\n          <Text>{props.data.id}</Text>\n\n          <Text fontWeight=\"bold\" marginRight={4}>\n            Name\n          </Text>\n          <Text>{props.data.name}</Text>\n\n          <Text fontWeight=\"bold\" marginRight={4}>\n            Email\n          </Text>\n          <Text>{props.data.email}</Text>\n        </SimpleGrid>\n        <NextLink href=\"/\">\n          <Link marginY=\"2rem\">\n            <Text fontStyle=\"italic\">Go back home</Text>\n          </Link>\n        </NextLink>\n      </Flex>\n    </Box>\n  );\n};\n\nexport const getServerSideProps: GetServerSideProps = async ({\n  params,\n  res\n}) => {\n  try {\n    const { id } = params;\n    const result = await fetch(`http://localhost:3000/api/nft/${id}`);\n    const data: Data = await result.json();\n\n    return {\n      props: { data }\n    };\n  } catch {\n    res.statusCode = 404;\n    return {\n      props: {}\n    };\n  }\n};\n\nexport default NFTPage;\n"]},"metadata":{},"sourceType":"module"}